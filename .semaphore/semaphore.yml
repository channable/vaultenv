---
version: "v1.0"
name: "Vaultenv CI Pipeline"

agent:
  machine:
    type: "e1-standard-4"
    os_image: "ubuntu2004"

blocks:
  - name: "Run checks"
    task:
      secrets:
        # Keys needed to access our cachix cache.
        - name: "cachix-channable-public"

      jobs:
        - name: "Run tests"
          commands:
            - "checkout"

            # Download and verify Nix installation script.
            - curl -o install-nix-2.10.3 https://releases.nixos.org/nix/nix-2.10.3/install
            - sha256sum --check .semaphore/install-nix.sha256

            # Restore `/nix` cache. Create the directory first, otherwise we encounter
            # permission errors. We do this because the Semaphore cache is faster than
            # both Cachix and cache.nixos.org.
            - "sudo mkdir /nix"
            - "sudo chown -R semaphore:semaphore /nix"
            - "cache restore nix-store-"

            # For some reason, Semaphore CI sets this variable, but it causes the nix installation to fail
            - unset LD_LIBRARY_PATH

            # Install Nix and source the shell configuration immediately.
            - "sh ./install-nix-2.10.3 --no-daemon"
            # Enable `nix-command` feature, which `nix build` needs to build
            - "sudo mkdir /etc/nix"
            - "echo 'experimental-features = nix-command' | sudo tee -a /etc/nix/nix.conf"

            - ". $HOME/.nix-profile/etc/profile.d/nix.sh"

            # Install Cachix and use the Channable cache
            - "nix-env -iA nixpkgs.cachix"
            - "cachix use channable-public"

            # Build the devenv and the static package
            - "nix-build --no-out-link default.nix nix/release.nix > nix-store-locations"

            # push the result to Cachix.
            - "cat nix-store-locations | cachix push channable-public"

            # Run the build and tests with Stack
            - "nix shell -f default.nix -c stack build --only-dependencies --test"
            - "nix shell -f default.nix -c stack test"

            # Run the integration tests
            - "(cd test && nix shell -f default.nix -c ./integration_test.sh)"

            # Build the Debian package
            - "nix shell -f default.nix -c ./package/build_package.sh"

            # Store a copy of the nix store. This will be refreshed daily, which
            # is more than sufficient for this repo.
            - "cache store nix-store-$(date -u -Idate) /nix"

  - name: "Build - MacOS"
    dependencies: []

    # Disabled while testing this PR
    # # Only applies to tags.
    # run:
    #   when: 'tag =~ "^v[[:digit:]]\.[[:digit:]]+\.[[:digit:]]$"'

    task:
      agent:
        machine:
          type: "a1-standard-4"  # MacOS cannot be used with any other machine type
          os_image: "macos-xcode13"


      jobs:
        - name: "Build"
          commands:
            - "checkout"

            # Download and verify Nix installation script.
            - curl -o install-nix-2.10.3 https://releases.nixos.org/nix/nix-2.10.3/install
            - sha256sum --check .semaphore/install-nix.sha256

            # Restore `/nix` cache. Create the directory first, otherwise we encounter
            # permission errors. We do this because the Semaphore cache is faster than
            # both Cachix and cache.nixos.org.
            - "sudo mkdir /nix"
            - "sudo chown -R semaphore:semaphore /nix"
            - "cache restore mac-nix-store-"

            # For some reason, Semaphore CI sets this variable, but it causes the nix installation to fail
            - unset LD_LIBRARY_PATH

            # Install Nix
            - "yes | ./install-nix-2.10.3 --daemon-user-count 1"
            - echo "experimental-features = nix-command flakes" | sudo tee -a /etc/nix/nix.conf
            - echo "max-jobs = auto" | sudo tee -a /etc/nix/nix.conf
            - echo "trusted-users = root semaphore" | sudo tee -a /etc/nix/nix.conf
            - sudo launchctl kickstart -k system/org.nixos.nix-daemon

            # Ensure necessary environment variables are set
            - ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"

            # Install and configure Cachix.
            - "nix profile install nixpkgs#cachix"
            - "cachix use channable-public"

            # Build the static package
            - "nix-build --no-out-link nix/release.nix | cachix push channable-public"

            # Store a copy of the nix store. This will be refreshed daily, which
            # is more than sufficient for this repo.
            - "cache store nix-store-$(date -u -Idate) /nix"
